@model Erweiterungsfaktor.Models.Netzbetreiber

@{
    ViewBag.Title = "Edit";
}

<h2>Netzbetreiber</h2>
<h4>Bearbeiten</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
        @Html.LabelFor(model => model.BNR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BNR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BNR, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rechtsform, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rechtsform, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rechtsform, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StrasseHausNr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StrasseHausNr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StrasseHausNr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PLZOrt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PLZOrt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PLZOrt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VereinfachtesVerfahren, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.VereinfachtesVerfahren)
                    @Html.ValidationMessageFor(model => model.VereinfachtesVerfahren, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<hr />
<div>
    @if (ViewBag.returnURL == null)
    {
        @Html.ActionLink("Zurück", "Index")
    }
    else
    {
        <a href="@ViewBag.returnURL">Zurück</a>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
